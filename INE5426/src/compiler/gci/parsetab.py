
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAMATTRIBUTION BREAK COMMA DEF DIVIDE ELSE EQ_COMPARISON FLOAT_CONSTANT FLOAT_KEYWORD FOR GREATER_OR_EQUALS_THAN GREATER_THAN IDENT IF INT_CONSTANT INT_KEYWORD LBRACKETS LOWER_OR_EQUALS_THAN LOWER_THAN LPAREN LSQBRACKETS MINUS MODULE NEQ_COMPARISON NEW NULL PLUS PRINT RBRACKETS READ RETURN RPAREN RSQBRACKETS SEMICOLON STRING_CONSTANT STRING_KEYWORD TIMESempty :new_for_loop_label :PROGRAM : STATEMENT\n               | FUNCLIST\n               | empty\n    FUNCLIST : FUNCDEF FUNCLISTAUXFUNCLISTAUX : FUNCLIST\n                   | empty\n    FUNCDEF : DEF IDENT LPAREN PARAMLIST RPAREN LBRACKETS STATELIST RBRACKETSPARAMLIST : DATATYPE IDENT PARAMLISTAUX\n                 | empty\n    PARAMLISTAUX : COMMA PARAMLIST\n                    | empty\n    DATATYPE : INT_KEYWORD\n                | FLOAT_KEYWORD\n                | STRING_KEYWORD\n    STATEMENT : VARDECL SEMICOLONSTATEMENT : ATRIBSTAT SEMICOLONSTATEMENT : PRINTSTAT SEMICOLONSTATEMENT : READSTAT SEMICOLONSTATEMENT : RETURNSTAT SEMICOLONSTATEMENT : IFSTATSTATEMENT : FORSTATSTATEMENT : LBRACKETS STATELIST RBRACKETS STATEMENT : BREAK SEMICOLONSTATEMENT : SEMICOLONVARDECL : DATATYPE IDENT OPT_VECTOROPT_VECTOR : LSQBRACKETS INT_CONSTANT RSQBRACKETS OPT_VECTOR\n                  | empty\n    ATRIBSTAT : LVALUE ATTRIBUTION ATRIB_RIGHTATRIB_RIGHT : FUNCCALL_OR_EXPRESSIONATRIB_RIGHT : ALLOCEXPRESSIONFUNCCALL_OR_EXPRESSION : MINUS FACTOR REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR\n                              | PLUS FACTOR REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPRFUNCCALL_OR_EXPRESSION : INT_CONSTANT REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR\n                              | STRING_CONSTANT REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR\n                              | FLOAT_CONSTANT REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPRFUNCCALL_OR_EXPRESSION : NULL REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPRFUNCCALL_OR_EXPRESSION : LPAREN NUMEXPRESSION RPAREN REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPRFUNCCALL_OR_EXPRESSION : IDENT FOLLOW_IDENTFOLLOW_IDENT : OPT_ALLOC_NUMEXP REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPRFOLLOW_IDENT : LPAREN PARAMLISTCALL RPARENPARAMLISTCALL : IDENT PARAMLISTCALLAUX\n                     | empty\n    PARAMLISTCALLAUX : COMMA PARAMLISTCALL\n                        | empty\n    PRINTSTAT : PRINT EXPRESSIONREADSTAT : READ LVALUERETURNSTAT : RETURNIFSTAT : IF LPAREN EXPRESSION RPAREN LBRACKETS STATELIST RBRACKETS OPT_ELSEOPT_ELSE : ELSE LBRACKETS STATELIST RBRACKETS\n                | empty\n    FORSTAT : new_for_loop_label FOR LPAREN ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPAREN LBRACKETS STATELIST RBRACKETSSTATELIST : STATEMENT OPT_STATELISTOPT_STATELIST : STATELIST\n                     | empty\n    ALLOCEXPRESSION : NEW DATATYPE LSQBRACKETS NUMEXPRESSION RSQBRACKETS OPT_ALLOC_NUMEXPOPT_ALLOC_NUMEXP : LSQBRACKETS NUMEXPRESSION RSQBRACKETS OPT_ALLOC_NUMEXP\n                        | empty\n    EXPRESSION : NUMEXPRESSION OPT_REL_OP_NUM_EXPROPT_REL_OP_NUM_EXPR : REL_OP NUMEXPRESSION\n                           | empty\n    REL_OP : LOWER_THANREL_OP : GREATER_THANREL_OP : LOWER_OR_EQUALS_THANREL_OP : GREATER_OR_EQUALS_THANREL_OP : EQ_COMPARISONREL_OP : NEQ_COMPARISONNUMEXPRESSION : TERM REC_PLUS_MINUS_TERMREC_PLUS_MINUS_TERM : PLUS_OR_MINUS TERM REC_PLUS_MINUS_TERM\n                           | empty\n    PLUS_OR_MINUS : PLUS\n                     | MINUS\n       UNARYEXPR_OP : TIMES\n                    | MODULE\n                    | DIVIDE TERM : UNARYEXPR REC_UNARYEXPRREC_UNARYEXPR : UNARYEXPR_OP TERM\n                     | empty\n    UNARYEXPR : PLUS_OR_MINUS FACTORUNARYEXPR : FACTORFACTOR : INT_CONSTANT\n              | FLOAT_CONSTANT\n              | STRING_CONSTANT\n              | NULLFACTOR : LVALUEFACTOR : LPAREN NUMEXPRESSION RPARENLVALUE : IDENT OPT_ALLOC_NUMEXP'
    
_lr_action_items = {'LBRACKETS':([0,6,11,12,13,28,29,30,31,32,34,35,62,122,142,144,162,172,178,179,180,183,184,186,187,189,],[13,-26,-22,-23,13,-17,-18,-19,-20,-21,13,-25,-24,142,13,162,13,-1,-50,183,-52,13,186,13,-51,-53,]),'BREAK':([0,6,11,12,13,28,29,30,31,32,34,35,62,142,162,172,178,180,183,186,187,189,],[14,-26,-22,-23,14,-17,-18,-19,-20,-21,14,-25,-24,14,14,-1,-50,-52,14,14,-51,-53,]),'SEMICOLON':([0,5,6,7,8,9,10,11,12,13,14,17,21,28,29,30,31,32,34,35,39,40,42,44,45,46,47,49,52,53,54,55,56,58,62,66,68,70,71,72,75,76,77,78,80,82,84,91,93,94,96,100,106,107,108,109,110,111,112,114,115,118,119,120,121,123,127,128,129,130,131,132,133,134,135,136,141,142,146,147,148,149,150,151,152,153,154,155,161,162,166,167,168,169,171,172,176,177,178,180,183,186,187,189,],[6,28,-26,29,30,31,32,-22,-23,6,35,-1,-49,-17,-18,-19,-20,-21,6,-25,-1,-88,-59,-47,-1,-1,-1,-81,-82,-83,-84,-85,-86,-48,-24,-27,-29,-30,-31,-32,-1,-1,-1,-1,-1,-60,-62,-69,-71,-77,-79,-80,-1,-1,-1,-1,-1,-1,-1,-40,-1,-61,-1,-78,-87,143,-1,-58,-1,-1,-1,-1,-1,-1,-1,-1,-70,6,-28,-1,-1,-35,-36,-37,-38,-1,-1,-42,173,6,-33,-34,-1,-41,-1,-1,-39,-57,-50,-52,6,6,-51,-53,]),'$end':([0,1,2,3,4,6,11,12,15,28,29,30,31,32,35,36,37,38,62,172,178,180,182,187,189,],[-1,0,-3,-4,-5,-26,-22,-23,-1,-17,-18,-19,-20,-21,-25,-6,-7,-8,-24,-1,-50,-52,-9,-51,-53,]),'PRINT':([0,6,11,12,13,28,29,30,31,32,34,35,62,142,162,172,178,180,183,186,187,189,],[19,-26,-22,-23,19,-17,-18,-19,-20,-21,19,-25,-24,19,19,-1,-50,-52,19,19,-51,-53,]),'READ':([0,6,11,12,13,28,29,30,31,32,34,35,62,142,162,172,178,180,183,186,187,189,],[20,-26,-22,-23,20,-17,-18,-19,-20,-21,20,-25,-24,20,20,-1,-50,-52,20,20,-51,-53,]),'RETURN':([0,6,11,12,13,28,29,30,31,32,34,35,62,142,162,172,178,180,183,186,187,189,],[21,-26,-22,-23,21,-17,-18,-19,-20,-21,21,-25,-24,21,21,-1,-50,-52,21,21,-51,-53,]),'IF':([0,6,11,12,13,28,29,30,31,32,34,35,62,142,162,172,178,180,183,186,187,189,],[22,-26,-22,-23,22,-17,-18,-19,-20,-21,22,-25,-24,22,22,-1,-50,-52,22,22,-51,-53,]),'DEF':([0,15,182,],[24,24,-9,]),'INT_KEYWORD':([0,6,11,12,13,28,29,30,31,32,34,35,62,81,104,142,162,164,172,178,180,183,186,187,189,],[25,-26,-22,-23,25,-17,-18,-19,-20,-21,25,-25,-24,25,25,25,25,25,-1,-50,-52,25,25,-51,-53,]),'FLOAT_KEYWORD':([0,6,11,12,13,28,29,30,31,32,34,35,62,81,104,142,162,164,172,178,180,183,186,187,189,],[26,-26,-22,-23,26,-17,-18,-19,-20,-21,26,-25,-24,26,26,26,26,26,-1,-50,-52,26,26,-51,-53,]),'STRING_KEYWORD':([0,6,11,12,13,28,29,30,31,32,34,35,62,81,104,142,162,164,172,178,180,183,186,187,189,],[27,-26,-22,-23,27,-17,-18,-19,-20,-21,27,-25,-24,27,27,27,27,27,-1,-50,-52,27,27,-51,-53,]),'IDENT':([0,6,11,12,13,16,19,20,24,25,26,27,28,29,30,31,32,34,35,41,43,48,50,51,57,59,62,73,74,79,83,85,86,87,88,89,90,92,95,97,98,99,103,116,125,140,142,143,157,162,172,173,178,180,183,186,187,189,],[17,-26,-22,-23,17,39,17,17,61,-14,-15,-16,-17,-18,-19,-20,-21,17,-25,17,80,17,-72,-73,17,17,-24,17,17,17,17,-63,-64,-65,-66,-67,-68,17,17,-74,-75,-76,17,138,145,17,17,17,138,17,-1,17,-50,-52,17,17,-51,-53,]),'FOR':([0,6,11,12,13,23,28,29,30,31,32,34,35,62,142,162,172,178,180,183,186,187,189,],[-2,-26,-22,-23,-2,60,-17,-18,-19,-20,-21,-2,-25,-24,-2,-2,-1,-50,-52,-2,-2,-51,-53,]),'RBRACKETS':([6,11,12,28,29,30,31,32,33,34,35,62,63,64,65,160,172,174,178,180,185,187,188,189,],[-26,-22,-23,-17,-18,-19,-20,-21,62,-1,-25,-24,-54,-55,-56,172,-1,182,-50,-52,187,-51,189,-53,]),'LSQBRACKETS':([17,25,26,27,39,80,106,117,127,171,],[41,-14,-15,-16,67,41,41,140,67,41,]),'ATTRIBUTION':([17,18,40,42,106,128,],[-1,43,-88,-59,-1,-58,]),'TIMES':([17,40,42,47,49,52,53,54,55,56,75,76,77,78,80,100,106,107,108,115,121,128,135,],[-1,-88,-59,97,-81,-82,-83,-84,-85,-86,97,97,97,97,-1,-80,-1,97,97,97,-87,-58,97,]),'MODULE':([17,40,42,47,49,52,53,54,55,56,75,76,77,78,80,100,106,107,108,115,121,128,135,],[-1,-88,-59,98,-81,-82,-83,-84,-85,-86,98,98,98,98,-1,-80,-1,98,98,98,-87,-58,98,]),'DIVIDE':([17,40,42,47,49,52,53,54,55,56,75,76,77,78,80,100,106,107,108,115,121,128,135,],[-1,-88,-59,99,-81,-82,-83,-84,-85,-86,99,99,99,99,-1,-80,-1,99,99,99,-87,-58,99,]),'PLUS':([17,19,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,59,75,76,77,78,79,80,83,85,86,87,88,89,90,92,94,95,96,97,98,99,100,106,107,108,109,110,111,112,115,119,120,121,128,129,130,135,136,140,143,153,],[-1,50,-88,50,-59,74,50,-1,-81,-72,-73,-82,-83,-84,-85,-86,50,50,-1,-1,-1,-1,50,-1,50,-63,-64,-65,-66,-67,-68,50,-77,50,-79,-74,-75,-76,-80,-1,-1,-1,50,50,50,50,-1,50,-78,-87,-58,50,50,-1,50,50,50,50,]),'MINUS':([17,19,40,41,42,43,46,47,49,50,51,52,53,54,55,56,57,59,75,76,77,78,79,80,83,85,86,87,88,89,90,92,94,95,96,97,98,99,100,106,107,108,109,110,111,112,115,119,120,121,128,129,130,135,136,140,143,153,],[-1,51,-88,51,-59,73,51,-1,-81,-72,-73,-82,-83,-84,-85,-86,51,51,-1,-1,-1,-1,51,-1,51,-63,-64,-65,-66,-67,-68,51,-77,51,-79,-74,-75,-76,-80,-1,-1,-1,51,51,51,51,-1,51,-78,-87,-58,51,51,-1,51,51,51,51,]),'LOWER_THAN':([17,40,42,45,46,47,49,52,53,54,55,56,75,76,77,78,80,91,93,94,96,100,106,107,108,109,110,111,112,115,119,120,121,128,129,130,131,132,133,134,135,136,141,147,148,153,154,168,],[-1,-88,-59,85,-1,-1,-81,-82,-83,-84,-85,-86,-1,-1,-1,-1,-1,-69,-71,-77,-79,-80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-78,-87,-58,-1,-1,85,85,85,85,-1,-1,-70,85,85,-1,85,85,]),'GREATER_THAN':([17,40,42,45,46,47,49,52,53,54,55,56,75,76,77,78,80,91,93,94,96,100,106,107,108,109,110,111,112,115,119,120,121,128,129,130,131,132,133,134,135,136,141,147,148,153,154,168,],[-1,-88,-59,86,-1,-1,-81,-82,-83,-84,-85,-86,-1,-1,-1,-1,-1,-69,-71,-77,-79,-80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-78,-87,-58,-1,-1,86,86,86,86,-1,-1,-70,86,86,-1,86,86,]),'LOWER_OR_EQUALS_THAN':([17,40,42,45,46,47,49,52,53,54,55,56,75,76,77,78,80,91,93,94,96,100,106,107,108,109,110,111,112,115,119,120,121,128,129,130,131,132,133,134,135,136,141,147,148,153,154,168,],[-1,-88,-59,87,-1,-1,-81,-82,-83,-84,-85,-86,-1,-1,-1,-1,-1,-69,-71,-77,-79,-80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-78,-87,-58,-1,-1,87,87,87,87,-1,-1,-70,87,87,-1,87,87,]),'GREATER_OR_EQUALS_THAN':([17,40,42,45,46,47,49,52,53,54,55,56,75,76,77,78,80,91,93,94,96,100,106,107,108,109,110,111,112,115,119,120,121,128,129,130,131,132,133,134,135,136,141,147,148,153,154,168,],[-1,-88,-59,88,-1,-1,-81,-82,-83,-84,-85,-86,-1,-1,-1,-1,-1,-69,-71,-77,-79,-80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-78,-87,-58,-1,-1,88,88,88,88,-1,-1,-70,88,88,-1,88,88,]),'EQ_COMPARISON':([17,40,42,45,46,47,49,52,53,54,55,56,75,76,77,78,80,91,93,94,96,100,106,107,108,109,110,111,112,115,119,120,121,128,129,130,131,132,133,134,135,136,141,147,148,153,154,168,],[-1,-88,-59,89,-1,-1,-81,-82,-83,-84,-85,-86,-1,-1,-1,-1,-1,-69,-71,-77,-79,-80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-78,-87,-58,-1,-1,89,89,89,89,-1,-1,-70,89,89,-1,89,89,]),'NEQ_COMPARISON':([17,40,42,45,46,47,49,52,53,54,55,56,75,76,77,78,80,91,93,94,96,100,106,107,108,109,110,111,112,115,119,120,121,128,129,130,131,132,133,134,135,136,141,147,148,153,154,168,],[-1,-88,-59,90,-1,-1,-81,-82,-83,-84,-85,-86,-1,-1,-1,-1,-1,-69,-71,-77,-79,-80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-78,-87,-58,-1,-1,90,90,90,90,-1,-1,-70,90,90,-1,90,90,]),'RSQBRACKETS':([17,40,42,46,47,49,52,53,54,55,56,69,91,93,94,96,100,105,106,119,120,121,128,141,159,],[-1,-88,-59,-1,-1,-81,-82,-83,-84,-85,-86,106,-69,-71,-77,-79,-80,127,-1,-1,-78,-87,-58,-70,171,]),'RPAREN':([17,40,42,45,46,47,49,52,53,54,55,56,70,71,72,75,76,77,78,80,82,84,91,93,94,96,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,124,126,128,129,130,131,132,133,134,135,136,137,138,139,141,145,147,148,149,150,151,152,153,154,155,156,157,158,163,164,165,166,167,168,169,170,171,175,176,177,181,],[-1,-88,-59,-1,-1,-1,-81,-82,-83,-84,-85,-86,-30,-31,-32,-1,-1,-1,-1,-1,-60,-62,-69,-71,-77,-79,-80,121,122,-1,-1,-1,-1,-1,-1,-1,-1,135,-40,-1,-1,-61,-1,-78,-87,144,-11,-58,-1,-1,-1,-1,-1,-1,-1,-1,155,-1,-44,-70,-1,-1,-1,-35,-36,-37,-38,-1,-1,-42,-43,-1,-46,-10,-1,-13,-33,-34,-1,-41,-45,-1,-12,-39,-57,184,]),'INT_CONSTANT':([19,41,43,48,50,51,57,59,67,73,74,79,83,85,86,87,88,89,90,92,95,97,98,99,140,143,],[52,52,75,52,-72,-73,52,52,105,52,52,52,52,-63,-64,-65,-66,-67,-68,52,52,-74,-75,-76,52,52,]),'FLOAT_CONSTANT':([19,41,43,48,50,51,57,59,73,74,79,83,85,86,87,88,89,90,92,95,97,98,99,140,143,],[53,53,77,53,-72,-73,53,53,53,53,53,53,-63,-64,-65,-66,-67,-68,53,53,-74,-75,-76,53,53,]),'STRING_CONSTANT':([19,41,43,48,50,51,57,59,73,74,79,83,85,86,87,88,89,90,92,95,97,98,99,140,143,],[54,54,76,54,-72,-73,54,54,54,54,54,54,-63,-64,-65,-66,-67,-68,54,54,-74,-75,-76,54,54,]),'NULL':([19,41,43,48,50,51,57,59,73,74,79,83,85,86,87,88,89,90,92,95,97,98,99,140,143,],[55,55,78,55,-72,-73,55,55,55,55,55,55,-63,-64,-65,-66,-67,-68,55,55,-74,-75,-76,55,55,]),'LPAREN':([19,22,41,43,48,50,51,57,59,60,61,73,74,79,80,83,85,86,87,88,89,90,92,95,97,98,99,140,143,],[57,59,57,79,57,-72,-73,57,57,103,104,57,57,57,116,57,-63,-64,-65,-66,-67,-68,57,57,-74,-75,-76,57,57,]),'NEW':([43,],[81,]),'COMMA':([138,145,],[157,164,]),'ELSE':([172,],[179,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'STATEMENT':([0,13,34,142,162,183,186,],[2,34,34,34,34,34,34,]),'FUNCLIST':([0,15,],[3,37,]),'empty':([0,15,17,34,39,45,46,47,75,76,77,78,80,104,106,107,108,109,110,111,112,115,116,119,127,129,130,131,132,133,134,135,136,138,145,147,148,153,154,157,164,168,171,172,],[4,38,42,65,68,84,93,96,96,96,96,96,42,126,42,96,96,93,93,93,93,96,139,93,68,93,93,84,84,84,84,96,93,158,165,84,84,93,84,139,126,84,42,180,]),'VARDECL':([0,13,34,142,162,183,186,],[5,5,5,5,5,5,5,]),'ATRIBSTAT':([0,13,34,103,142,162,173,183,186,],[7,7,7,123,7,7,181,7,7,]),'PRINTSTAT':([0,13,34,142,162,183,186,],[8,8,8,8,8,8,8,]),'READSTAT':([0,13,34,142,162,183,186,],[9,9,9,9,9,9,9,]),'RETURNSTAT':([0,13,34,142,162,183,186,],[10,10,10,10,10,10,10,]),'IFSTAT':([0,13,34,142,162,183,186,],[11,11,11,11,11,11,11,]),'FORSTAT':([0,13,34,142,162,183,186,],[12,12,12,12,12,12,12,]),'FUNCDEF':([0,15,],[15,15,]),'DATATYPE':([0,13,34,81,104,142,162,164,183,186,],[16,16,16,117,125,16,16,125,16,16,]),'LVALUE':([0,13,19,20,34,41,48,57,59,73,74,79,83,92,95,103,140,142,143,162,173,183,186,],[18,18,56,58,18,56,56,56,56,56,56,56,56,56,56,18,56,18,56,18,18,18,18,]),'new_for_loop_label':([0,13,34,142,162,183,186,],[23,23,23,23,23,23,23,]),'STATELIST':([13,34,142,162,183,186,],[33,64,160,174,185,188,]),'FUNCLISTAUX':([15,],[36,]),'OPT_ALLOC_NUMEXP':([17,80,106,171,],[40,115,128,177,]),'EXPRESSION':([19,59,143,],[44,102,161,]),'NUMEXPRESSION':([19,41,57,59,79,83,140,143,],[45,69,101,45,113,118,159,45,]),'TERM':([19,41,57,59,79,83,92,95,140,143,],[46,46,46,46,46,46,119,120,46,46,]),'UNARYEXPR':([19,41,57,59,79,83,92,95,140,143,],[47,47,47,47,47,47,47,47,47,47,]),'PLUS_OR_MINUS':([19,41,46,57,59,79,83,92,95,109,110,111,112,119,129,130,136,140,143,153,],[48,48,92,48,48,48,48,48,48,92,92,92,92,92,92,92,92,48,48,92,]),'FACTOR':([19,41,48,57,59,73,74,79,83,92,95,140,143,],[49,49,100,49,49,107,108,49,49,49,49,49,49,]),'OPT_STATELIST':([34,],[63,]),'OPT_VECTOR':([39,127,],[66,146,]),'ATRIB_RIGHT':([43,],[70,]),'FUNCCALL_OR_EXPRESSION':([43,],[71,]),'ALLOCEXPRESSION':([43,],[72,]),'OPT_REL_OP_NUM_EXPR':([45,131,132,133,134,147,148,154,168,],[82,149,150,151,152,166,167,169,176,]),'REL_OP':([45,131,132,133,134,147,148,154,168,],[83,83,83,83,83,83,83,83,83,]),'REC_PLUS_MINUS_TERM':([46,109,110,111,112,119,129,130,136,153,],[91,131,132,133,134,141,147,148,154,168,]),'REC_UNARYEXPR':([47,75,76,77,78,107,108,115,135,],[94,109,110,111,112,129,130,136,153,]),'UNARYEXPR_OP':([47,75,76,77,78,107,108,115,135,],[95,95,95,95,95,95,95,95,95,]),'FOLLOW_IDENT':([80,],[114,]),'PARAMLIST':([104,164,],[124,175,]),'PARAMLISTCALL':([116,157,],[137,170,]),'PARAMLISTCALLAUX':([138,],[156,]),'PARAMLISTAUX':([145,],[163,]),'OPT_ELSE':([172,],[178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','CC20202_gci.py',67),
  ('new_for_loop_label -> <empty>','new_for_loop_label',0,'p_new_for_loop_label','CC20202_gci.py',72),
  ('PROGRAM -> STATEMENT','PROGRAM',1,'p_prog_statment','CC20202_gci.py',77),
  ('PROGRAM -> FUNCLIST','PROGRAM',1,'p_prog_statment','CC20202_gci.py',78),
  ('PROGRAM -> empty','PROGRAM',1,'p_prog_statment','CC20202_gci.py',79),
  ('FUNCLIST -> FUNCDEF FUNCLISTAUX','FUNCLIST',2,'p_funclist_funcdef','CC20202_gci.py',85),
  ('FUNCLISTAUX -> FUNCLIST','FUNCLISTAUX',1,'p_funclistaux_funclist','CC20202_gci.py',92),
  ('FUNCLISTAUX -> empty','FUNCLISTAUX',1,'p_funclistaux_funclist','CC20202_gci.py',93),
  ('FUNCDEF -> DEF IDENT LPAREN PARAMLIST RPAREN LBRACKETS STATELIST RBRACKETS','FUNCDEF',8,'p_funcdef','CC20202_gci.py',102),
  ('PARAMLIST -> DATATYPE IDENT PARAMLISTAUX','PARAMLIST',3,'p_paralist_param','CC20202_gci.py',114),
  ('PARAMLIST -> empty','PARAMLIST',1,'p_paralist_param','CC20202_gci.py',115),
  ('PARAMLISTAUX -> COMMA PARAMLIST','PARAMLISTAUX',2,'p_paramlistaux_paramlist','CC20202_gci.py',127),
  ('PARAMLISTAUX -> empty','PARAMLISTAUX',1,'p_paramlistaux_paramlist','CC20202_gci.py',128),
  ('DATATYPE -> INT_KEYWORD','DATATYPE',1,'p_datatype','CC20202_gci.py',138),
  ('DATATYPE -> FLOAT_KEYWORD','DATATYPE',1,'p_datatype','CC20202_gci.py',139),
  ('DATATYPE -> STRING_KEYWORD','DATATYPE',1,'p_datatype','CC20202_gci.py',140),
  ('STATEMENT -> VARDECL SEMICOLON','STATEMENT',2,'p_statement_vardecl','CC20202_gci.py',146),
  ('STATEMENT -> ATRIBSTAT SEMICOLON','STATEMENT',2,'p_statement_atrib','CC20202_gci.py',151),
  ('STATEMENT -> PRINTSTAT SEMICOLON','STATEMENT',2,'p_statement_print','CC20202_gci.py',156),
  ('STATEMENT -> READSTAT SEMICOLON','STATEMENT',2,'p_statement_read','CC20202_gci.py',161),
  ('STATEMENT -> RETURNSTAT SEMICOLON','STATEMENT',2,'p_statement_return','CC20202_gci.py',166),
  ('STATEMENT -> IFSTAT','STATEMENT',1,'p_statement_if','CC20202_gci.py',171),
  ('STATEMENT -> FORSTAT','STATEMENT',1,'p_statement_for','CC20202_gci.py',178),
  ('STATEMENT -> LBRACKETS STATELIST RBRACKETS','STATEMENT',3,'p_statement_statelist','CC20202_gci.py',185),
  ('STATEMENT -> BREAK SEMICOLON','STATEMENT',2,'p_statement_break','CC20202_gci.py',192),
  ('STATEMENT -> SEMICOLON','STATEMENT',1,'p_statement_end','CC20202_gci.py',197),
  ('VARDECL -> DATATYPE IDENT OPT_VECTOR','VARDECL',3,'p_vardecl','CC20202_gci.py',202),
  ('OPT_VECTOR -> LSQBRACKETS INT_CONSTANT RSQBRACKETS OPT_VECTOR','OPT_VECTOR',4,'p_opt_vector','CC20202_gci.py',209),
  ('OPT_VECTOR -> empty','OPT_VECTOR',1,'p_opt_vector','CC20202_gci.py',210),
  ('ATRIBSTAT -> LVALUE ATTRIBUTION ATRIB_RIGHT','ATRIBSTAT',3,'p_atribstat','CC20202_gci.py',221),
  ('ATRIB_RIGHT -> FUNCCALL_OR_EXPRESSION','ATRIB_RIGHT',1,'p_atribright_func_or_exp','CC20202_gci.py',228),
  ('ATRIB_RIGHT -> ALLOCEXPRESSION','ATRIB_RIGHT',1,'p_atribright_alloc','CC20202_gci.py',233),
  ('FUNCCALL_OR_EXPRESSION -> MINUS FACTOR REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR','FUNCCALL_OR_EXPRESSION',5,'p_funccall_or_exp_minus','CC20202_gci.py',238),
  ('FUNCCALL_OR_EXPRESSION -> PLUS FACTOR REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR','FUNCCALL_OR_EXPRESSION',5,'p_funccall_or_exp_minus','CC20202_gci.py',239),
  ('FUNCCALL_OR_EXPRESSION -> INT_CONSTANT REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR','FUNCCALL_OR_EXPRESSION',4,'p_funccall_or_exp_string','CC20202_gci.py',248),
  ('FUNCCALL_OR_EXPRESSION -> STRING_CONSTANT REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR','FUNCCALL_OR_EXPRESSION',4,'p_funccall_or_exp_string','CC20202_gci.py',249),
  ('FUNCCALL_OR_EXPRESSION -> FLOAT_CONSTANT REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR','FUNCCALL_OR_EXPRESSION',4,'p_funccall_or_exp_string','CC20202_gci.py',250),
  ('FUNCCALL_OR_EXPRESSION -> NULL REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR','FUNCCALL_OR_EXPRESSION',4,'p_funccall_or_exp_null','CC20202_gci.py',259),
  ('FUNCCALL_OR_EXPRESSION -> LPAREN NUMEXPRESSION RPAREN REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR','FUNCCALL_OR_EXPRESSION',6,'p_funccall_or_exp_parentesis','CC20202_gci.py',268),
  ('FUNCCALL_OR_EXPRESSION -> IDENT FOLLOW_IDENT','FUNCCALL_OR_EXPRESSION',2,'p_funccall_or_exp_ident','CC20202_gci.py',277),
  ('FOLLOW_IDENT -> OPT_ALLOC_NUMEXP REC_UNARYEXPR REC_PLUS_MINUS_TERM OPT_REL_OP_NUM_EXPR','FOLLOW_IDENT',4,'p_follow_ident_alloc','CC20202_gci.py',287),
  ('FOLLOW_IDENT -> LPAREN PARAMLISTCALL RPAREN','FOLLOW_IDENT',3,'p_follow_ident_parentesis','CC20202_gci.py',295),
  ('PARAMLISTCALL -> IDENT PARAMLISTCALLAUX','PARAMLISTCALL',2,'p_paramlistcall_ident','CC20202_gci.py',303),
  ('PARAMLISTCALL -> empty','PARAMLISTCALL',1,'p_paramlistcall_ident','CC20202_gci.py',304),
  ('PARAMLISTCALLAUX -> COMMA PARAMLISTCALL','PARAMLISTCALLAUX',2,'p_paramlistcallaux','CC20202_gci.py',316),
  ('PARAMLISTCALLAUX -> empty','PARAMLISTCALLAUX',1,'p_paramlistcallaux','CC20202_gci.py',317),
  ('PRINTSTAT -> PRINT EXPRESSION','PRINTSTAT',2,'p_printstat','CC20202_gci.py',329),
  ('READSTAT -> READ LVALUE','READSTAT',2,'p_readstat','CC20202_gci.py',334),
  ('RETURNSTAT -> RETURN','RETURNSTAT',1,'p_returnstat','CC20202_gci.py',339),
  ('IFSTAT -> IF LPAREN EXPRESSION RPAREN LBRACKETS STATELIST RBRACKETS OPT_ELSE','IFSTAT',8,'p_ifstat','CC20202_gci.py',344),
  ('OPT_ELSE -> ELSE LBRACKETS STATELIST RBRACKETS','OPT_ELSE',4,'p_opt_else','CC20202_gci.py',360),
  ('OPT_ELSE -> empty','OPT_ELSE',1,'p_opt_else','CC20202_gci.py',361),
  ('FORSTAT -> new_for_loop_label FOR LPAREN ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPAREN LBRACKETS STATELIST RBRACKETS','FORSTAT',12,'p_forstat','CC20202_gci.py',376),
  ('STATELIST -> STATEMENT OPT_STATELIST','STATELIST',2,'p_statelist','CC20202_gci.py',401),
  ('OPT_STATELIST -> STATELIST','OPT_STATELIST',1,'p_opt_statelist','CC20202_gci.py',408),
  ('OPT_STATELIST -> empty','OPT_STATELIST',1,'p_opt_statelist','CC20202_gci.py',409),
  ('ALLOCEXPRESSION -> NEW DATATYPE LSQBRACKETS NUMEXPRESSION RSQBRACKETS OPT_ALLOC_NUMEXP','ALLOCEXPRESSION',6,'p_allocexp','CC20202_gci.py',418),
  ('OPT_ALLOC_NUMEXP -> LSQBRACKETS NUMEXPRESSION RSQBRACKETS OPT_ALLOC_NUMEXP','OPT_ALLOC_NUMEXP',4,'p_opt_allocexp','CC20202_gci.py',428),
  ('OPT_ALLOC_NUMEXP -> empty','OPT_ALLOC_NUMEXP',1,'p_opt_allocexp','CC20202_gci.py',429),
  ('EXPRESSION -> NUMEXPRESSION OPT_REL_OP_NUM_EXPR','EXPRESSION',2,'p_expression','CC20202_gci.py',438),
  ('OPT_REL_OP_NUM_EXPR -> REL_OP NUMEXPRESSION','OPT_REL_OP_NUM_EXPR',2,'p_opt_rel_op_num_expr','CC20202_gci.py',456),
  ('OPT_REL_OP_NUM_EXPR -> empty','OPT_REL_OP_NUM_EXPR',1,'p_opt_rel_op_num_expr','CC20202_gci.py',457),
  ('REL_OP -> LOWER_THAN','REL_OP',1,'p_relop_lt','CC20202_gci.py',471),
  ('REL_OP -> GREATER_THAN','REL_OP',1,'p_relop_gt','CC20202_gci.py',476),
  ('REL_OP -> LOWER_OR_EQUALS_THAN','REL_OP',1,'p_relop_lte','CC20202_gci.py',481),
  ('REL_OP -> GREATER_OR_EQUALS_THAN','REL_OP',1,'p_relop_gte','CC20202_gci.py',486),
  ('REL_OP -> EQ_COMPARISON','REL_OP',1,'p_relop_eq','CC20202_gci.py',491),
  ('REL_OP -> NEQ_COMPARISON','REL_OP',1,'p_relop_neq','CC20202_gci.py',496),
  ('NUMEXPRESSION -> TERM REC_PLUS_MINUS_TERM','NUMEXPRESSION',2,'p_numexp','CC20202_gci.py',501),
  ('REC_PLUS_MINUS_TERM -> PLUS_OR_MINUS TERM REC_PLUS_MINUS_TERM','REC_PLUS_MINUS_TERM',3,'p_rec_plus_minus','CC20202_gci.py',517),
  ('REC_PLUS_MINUS_TERM -> empty','REC_PLUS_MINUS_TERM',1,'p_rec_plus_minus','CC20202_gci.py',518),
  ('PLUS_OR_MINUS -> PLUS','PLUS_OR_MINUS',1,'p_operators','CC20202_gci.py',544),
  ('PLUS_OR_MINUS -> MINUS','PLUS_OR_MINUS',1,'p_operators','CC20202_gci.py',545),
  ('UNARYEXPR_OP -> TIMES','UNARYEXPR_OP',1,'p_operators','CC20202_gci.py',546),
  ('UNARYEXPR_OP -> MODULE','UNARYEXPR_OP',1,'p_operators','CC20202_gci.py',547),
  ('UNARYEXPR_OP -> DIVIDE','UNARYEXPR_OP',1,'p_operators','CC20202_gci.py',548),
  ('TERM -> UNARYEXPR REC_UNARYEXPR','TERM',2,'p_term_unary_exp','CC20202_gci.py',553),
  ('REC_UNARYEXPR -> UNARYEXPR_OP TERM','REC_UNARYEXPR',2,'p_rec_unaryexp_op','CC20202_gci.py',569),
  ('REC_UNARYEXPR -> empty','REC_UNARYEXPR',1,'p_rec_unaryexp_op','CC20202_gci.py',570),
  ('UNARYEXPR -> PLUS_OR_MINUS FACTOR','UNARYEXPR',2,'p_rec_unaryexp_plusminus','CC20202_gci.py',584),
  ('UNARYEXPR -> FACTOR','UNARYEXPR',1,'p_rec_unaryexp_factor','CC20202_gci.py',592),
  ('FACTOR -> INT_CONSTANT','FACTOR',1,'p_factor_const','CC20202_gci.py',597),
  ('FACTOR -> FLOAT_CONSTANT','FACTOR',1,'p_factor_const','CC20202_gci.py',598),
  ('FACTOR -> STRING_CONSTANT','FACTOR',1,'p_factor_const','CC20202_gci.py',599),
  ('FACTOR -> NULL','FACTOR',1,'p_factor_const','CC20202_gci.py',600),
  ('FACTOR -> LVALUE','FACTOR',1,'p_factor_lvalue','CC20202_gci.py',609),
  ('FACTOR -> LPAREN NUMEXPRESSION RPAREN','FACTOR',3,'p_factor_expr','CC20202_gci.py',614),
  ('LVALUE -> IDENT OPT_ALLOC_NUMEXP','LVALUE',2,'p_lvalue_ident','CC20202_gci.py',619),
]
